// This file has been generated by Py++.

#include "boost/python.hpp"
#include "python_CEGUI.h"
#include "WidgetDim.pypp.hpp"

namespace bp = boost::python;

void register_WidgetDim_class(){

    { //::CEGUI::WidgetDim
        typedef bp::class_< CEGUI::WidgetDim, bp::bases< CEGUI::BaseDim > > WidgetDim_exposer_t;
        WidgetDim_exposer_t WidgetDim_exposer = WidgetDim_exposer_t( "WidgetDim", "*!\n\
            \n\
                Dimension type that represents some dimension of a Windowwidget.  Implements BaseDim\
                interface.\n\
        \n\
                When calculating the final pixel value for the dimension, a target widget name is built by\n\
                appending the name suffix specified for the WidgetDim to the name of the window passed to\n\
                getValue, we then find the windowwidget with that name - the final value of the dimension\n\
                is taken from this windowwidget.\n\
            *\n", bp::init< CEGUI::String const &, CEGUI::DimensionType >(( bp::arg("name"), bp::arg("dim") ), "*!\n\
                \n\
                    Constructor.\n\
        \n\
                @param name\n\
                    String object holding the name suffix for a windowwidget.\n\
        \n\
                @param dim\n\
                    DimensionType value indicating which dimension of the described image that this\
                    ImageDim\n\
                    is to represent.\n\
                *\n") );
        bp::scope WidgetDim_scope( WidgetDim_exposer );
        { //::CEGUI::WidgetDim::setSourceDimension
        
            typedef void ( ::CEGUI::WidgetDim::*setSourceDimension_function_type )( ::CEGUI::DimensionType ) ;
            
            WidgetDim_exposer.def( 
                "setSourceDimension"
                , setSourceDimension_function_type( &::CEGUI::WidgetDim::setSourceDimension )
                , ( bp::arg("dim") )
                , "*!\n\
                    \n\
                        Sets the source dimension type for this WidgetDim.\n\
            \n\
                    @param dim\n\
                        DimensionType value indicating which dimension of the described image that this\
                        WidgetDim\n\
                        is to represent.\n\
            \n\
                    @return\n\
                        Nothing.\n\
                    *\n" );
        
        }
        { //::CEGUI::WidgetDim::setWidgetName
        
            typedef void ( ::CEGUI::WidgetDim::*setWidgetName_function_type )( ::CEGUI::String const & ) ;
            
            WidgetDim_exposer.def( 
                "setWidgetName"
                , setWidgetName_function_type( &::CEGUI::WidgetDim::setWidgetName )
                , ( bp::arg("name") )
                , "*!\n\
                    \n\
                        Set the name suffix to use for this WidgetDim.\n\
            \n\
                    @param name\n\
                        String object holding the name suffix for a windowwidget.\n\
            \n\
                    @return\n\
                        Nothing.\n\
                    *\n" );
        
        }
    }

}
