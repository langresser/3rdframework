// This file has been generated by Py++.

#include "boost/python.hpp"
#include "python_CEGUI.h"
#include "EventArgs.pypp.hpp"

namespace bp = boost::python;

void register_EventArgs_class(){

    { //::CEGUI::EventArgs
        typedef bp::class_< CEGUI::EventArgs > EventArgs_exposer_t;
        EventArgs_exposer_t EventArgs_exposer = EventArgs_exposer_t( "EventArgs", "*!\n\
        \n\
           Base class used as the argument to all subscribers Event object.\n\
        \n\
           The base EventArgs class does not contain any useful information, it is intended\n\
           to be specialised for each type of event that can be generated by objects within\n\
           the system.  The use of this base class allows all event subscribers to have the\n\
           same function signature.\n\
        \n\
           The  handled field is used to signal whether an event was actually handled or not.  While\n\
           the event system does not look at this value, code at a higher level can use it to determine\n\
           how far to propagate an event.\n\
        *\n", bp::init< >("*************************************************************************\n\
           Construction\n\
        *************************************************************************\n") );
        bp::scope EventArgs_scope( EventArgs_exposer );
        EventArgs_exposer.def_readwrite( "handled", &CEGUI::EventArgs::handled, "*************************************************************************\n\
           Data members\n\
        *************************************************************************\n\
         ! handlers should increment this if they handled the event.\n" );
    }

}
