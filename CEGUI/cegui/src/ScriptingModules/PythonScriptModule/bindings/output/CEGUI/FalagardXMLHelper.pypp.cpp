// This file has been generated by Py++.

#include "boost/python.hpp"
#include "python_CEGUI.h"
#include "FalagardXMLHelper.pypp.hpp"

namespace bp = boost::python;

void register_FalagardXMLHelper_class(){

    { //::CEGUI::FalagardXMLHelper
        typedef bp::class_< CEGUI::FalagardXMLHelper > FalagardXMLHelper_exposer_t;
        FalagardXMLHelper_exposer_t FalagardXMLHelper_exposer = FalagardXMLHelper_exposer_t( "FalagardXMLHelper", "*!\n\
        \n\
            Utility helper class primarily intended for use by the falagard xml parser.\n\
        *\n" );
        bp::scope FalagardXMLHelper_scope( FalagardXMLHelper_exposer );
        { //::CEGUI::FalagardXMLHelper::dimensionOperatorToString
        
            typedef ::CEGUI::String ( *dimensionOperatorToString_function_type )( ::CEGUI::DimensionOperator );
            
            FalagardXMLHelper_exposer.def( 
                "dimensionOperatorToString"
                , dimensionOperatorToString_function_type( &::CEGUI::FalagardXMLHelper::dimensionOperatorToString )
                , ( bp::arg("op") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::dimensionTypeToString
        
            typedef ::CEGUI::String ( *dimensionTypeToString_function_type )( ::CEGUI::DimensionType );
            
            FalagardXMLHelper_exposer.def( 
                "dimensionTypeToString"
                , dimensionTypeToString_function_type( &::CEGUI::FalagardXMLHelper::dimensionTypeToString )
                , ( bp::arg("dim") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::fontMetricTypeToString
        
            typedef ::CEGUI::String ( *fontMetricTypeToString_function_type )( ::CEGUI::FontMetricType );
            
            FalagardXMLHelper_exposer.def( 
                "fontMetricTypeToString"
                , fontMetricTypeToString_function_type( &::CEGUI::FalagardXMLHelper::fontMetricTypeToString )
                , ( bp::arg("metric") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::frameImageComponentToString
        
            typedef ::CEGUI::String ( *frameImageComponentToString_function_type )( ::CEGUI::FrameImageComponent );
            
            FalagardXMLHelper_exposer.def( 
                "frameImageComponentToString"
                , frameImageComponentToString_function_type( &::CEGUI::FalagardXMLHelper::frameImageComponentToString )
                , ( bp::arg("imageComp") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::horzAlignmentToString
        
            typedef ::CEGUI::String ( *horzAlignmentToString_function_type )( ::CEGUI::HorizontalAlignment );
            
            FalagardXMLHelper_exposer.def( 
                "horzAlignmentToString"
                , horzAlignmentToString_function_type( &::CEGUI::FalagardXMLHelper::horzAlignmentToString )
                , ( bp::arg("alignment") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::horzFormatToString
        
            typedef ::CEGUI::String ( *horzFormatToString_function_type )( ::CEGUI::HorizontalFormatting );
            
            FalagardXMLHelper_exposer.def( 
                "horzFormatToString"
                , horzFormatToString_function_type( &::CEGUI::FalagardXMLHelper::horzFormatToString )
                , ( bp::arg("format") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::horzTextFormatToString
        
            typedef ::CEGUI::String ( *horzTextFormatToString_function_type )( ::CEGUI::HorizontalTextFormatting );
            
            FalagardXMLHelper_exposer.def( 
                "horzTextFormatToString"
                , horzTextFormatToString_function_type( &::CEGUI::FalagardXMLHelper::horzTextFormatToString )
                , ( bp::arg("format") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToDimensionOperator
        
            typedef ::CEGUI::DimensionOperator ( *stringToDimensionOperator_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToDimensionOperator"
                , stringToDimensionOperator_function_type( &::CEGUI::FalagardXMLHelper::stringToDimensionOperator )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToDimensionType
        
            typedef ::CEGUI::DimensionType ( *stringToDimensionType_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToDimensionType"
                , stringToDimensionType_function_type( &::CEGUI::FalagardXMLHelper::stringToDimensionType )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToFontMetricType
        
            typedef ::CEGUI::FontMetricType ( *stringToFontMetricType_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToFontMetricType"
                , stringToFontMetricType_function_type( &::CEGUI::FalagardXMLHelper::stringToFontMetricType )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToFrameImageComponent
        
            typedef ::CEGUI::FrameImageComponent ( *stringToFrameImageComponent_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToFrameImageComponent"
                , stringToFrameImageComponent_function_type( &::CEGUI::FalagardXMLHelper::stringToFrameImageComponent )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToHorzAlignment
        
            typedef ::CEGUI::HorizontalAlignment ( *stringToHorzAlignment_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToHorzAlignment"
                , stringToHorzAlignment_function_type( &::CEGUI::FalagardXMLHelper::stringToHorzAlignment )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToHorzFormat
        
            typedef ::CEGUI::HorizontalFormatting ( *stringToHorzFormat_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToHorzFormat"
                , stringToHorzFormat_function_type( &::CEGUI::FalagardXMLHelper::stringToHorzFormat )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToHorzTextFormat
        
            typedef ::CEGUI::HorizontalTextFormatting ( *stringToHorzTextFormat_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToHorzTextFormat"
                , stringToHorzTextFormat_function_type( &::CEGUI::FalagardXMLHelper::stringToHorzTextFormat )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToVertAlignment
        
            typedef ::CEGUI::VerticalAlignment ( *stringToVertAlignment_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToVertAlignment"
                , stringToVertAlignment_function_type( &::CEGUI::FalagardXMLHelper::stringToVertAlignment )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToVertFormat
        
            typedef ::CEGUI::VerticalFormatting ( *stringToVertFormat_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToVertFormat"
                , stringToVertFormat_function_type( &::CEGUI::FalagardXMLHelper::stringToVertFormat )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::stringToVertTextFormat
        
            typedef ::CEGUI::VerticalTextFormatting ( *stringToVertTextFormat_function_type )( ::CEGUI::String const & );
            
            FalagardXMLHelper_exposer.def( 
                "stringToVertTextFormat"
                , stringToVertTextFormat_function_type( &::CEGUI::FalagardXMLHelper::stringToVertTextFormat )
                , ( bp::arg("str") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::vertAlignmentToString
        
            typedef ::CEGUI::String ( *vertAlignmentToString_function_type )( ::CEGUI::VerticalAlignment );
            
            FalagardXMLHelper_exposer.def( 
                "vertAlignmentToString"
                , vertAlignmentToString_function_type( &::CEGUI::FalagardXMLHelper::vertAlignmentToString )
                , ( bp::arg("alignment") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::vertFormatToString
        
            typedef ::CEGUI::String ( *vertFormatToString_function_type )( ::CEGUI::VerticalFormatting );
            
            FalagardXMLHelper_exposer.def( 
                "vertFormatToString"
                , vertFormatToString_function_type( &::CEGUI::FalagardXMLHelper::vertFormatToString )
                , ( bp::arg("format") ) );
        
        }
        { //::CEGUI::FalagardXMLHelper::vertTextFormatToString
        
            typedef ::CEGUI::String ( *vertTextFormatToString_function_type )( ::CEGUI::VerticalTextFormatting );
            
            FalagardXMLHelper_exposer.def( 
                "vertTextFormatToString"
                , vertTextFormatToString_function_type( &::CEGUI::FalagardXMLHelper::vertTextFormatToString )
                , ( bp::arg("format") ) );
        
        }
        FalagardXMLHelper_exposer.staticmethod( "dimensionOperatorToString" );
        FalagardXMLHelper_exposer.staticmethod( "dimensionTypeToString" );
        FalagardXMLHelper_exposer.staticmethod( "fontMetricTypeToString" );
        FalagardXMLHelper_exposer.staticmethod( "frameImageComponentToString" );
        FalagardXMLHelper_exposer.staticmethod( "horzAlignmentToString" );
        FalagardXMLHelper_exposer.staticmethod( "horzFormatToString" );
        FalagardXMLHelper_exposer.staticmethod( "horzTextFormatToString" );
        FalagardXMLHelper_exposer.staticmethod( "stringToDimensionOperator" );
        FalagardXMLHelper_exposer.staticmethod( "stringToDimensionType" );
        FalagardXMLHelper_exposer.staticmethod( "stringToFontMetricType" );
        FalagardXMLHelper_exposer.staticmethod( "stringToFrameImageComponent" );
        FalagardXMLHelper_exposer.staticmethod( "stringToHorzAlignment" );
        FalagardXMLHelper_exposer.staticmethod( "stringToHorzFormat" );
        FalagardXMLHelper_exposer.staticmethod( "stringToHorzTextFormat" );
        FalagardXMLHelper_exposer.staticmethod( "stringToVertAlignment" );
        FalagardXMLHelper_exposer.staticmethod( "stringToVertFormat" );
        FalagardXMLHelper_exposer.staticmethod( "stringToVertTextFormat" );
        FalagardXMLHelper_exposer.staticmethod( "vertAlignmentToString" );
        FalagardXMLHelper_exposer.staticmethod( "vertFormatToString" );
        FalagardXMLHelper_exposer.staticmethod( "vertTextFormatToString" );
    }

}
